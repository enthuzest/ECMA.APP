# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger: none

variables:
  azureSubscription: '70b939e5-0866-4bdf-989d-a9ac3b41d0c7'
  functionAppName: 'ecma-dev'
  vmImageName: 'vs2017-win2016'
  workingDirectory: '$(System.DefaultWorkingDirectory)/src/FunctionApp'
  dbWorkingDirectory: '$(System.DefaultWorkingDirectory)/src/Database'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
        includePreviewVersions: true
    - task: DotNetCoreCLI@2
      displayName: Build Function App
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: DotNetCoreCLI@2
      displayName: Build Database App
      inputs:
        command: 'build'
        projects: |
          $(dbWorkingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_db_output --configuration Release
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: ArchiveFiles@2
      displayName: 'Archive Db files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_db_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/db_$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

    - publish: $(Build.ArtifactStagingDirectory)/db_$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
       