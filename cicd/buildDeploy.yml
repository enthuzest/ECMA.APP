trigger: none

variables:
  functionAppName: 'ecma-dev'
  vmImageName: 'vs2017-win2016'
  workingDirectory: '$(System.DefaultWorkingDirectory)/src/FunctionApp'
  dbWorkingDirectory: '$(System.DefaultWorkingDirectory)/src/Database'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
        includePreviewVersions: true
      displayName: Use .NET 6.x

    - task: DotNetCoreCLI@2
      enabled: false
      displayName: Build Function App
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    - task: DotNetCoreCLI@2
      displayName: Build Database App
      inputs:
        command: 'build'
        projects: |
          $(dbWorkingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_db_output --configuration Release

    - task: ArchiveFiles@2
      enabled: false
      displayName: 'Archive Function App Files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: ArchiveFiles@2
      displayName: 'Archive DB files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_db_output'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/db_$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      enabled: false
      displayName: Pusblish App Artifact
      artifact: drop

    - publish: $(Build.ArtifactStagingDirectory)/db_$(Build.BuildId).zip
      displayName: Publish DB Artifact
      artifact: db_drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: DeployApp
    displayName: Deploy App
    environment: 'development'
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            enabled: false
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: 'azure-SN'
              appType: functionApp
              appName: $(functionAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'

  - deployment: DeployDb
    displayName: Deploy DB
    environment: DevDb
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            enabled: false
            displayName: Download DbUpDemo artifact
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'db_drop'
              downloadPath: '$(System.ArtifactsDirectory)/DbUpArtifact'
          - task: ExtractFiles@1
            displayName: Extract Zip
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/db_drop/db_$(Build.BuildId).zip'
              destinationFolder: '$(System.ArtifactsDirectory)/DbUpExtract'
              cleanDestinationFolder: false
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '6.x'
              includePreviewVersions: true
            displayName: Use .NET 6.x
            
          - task: DotNetCoreCLI@2
            inputs:
              command: 'custom'
              custom: 'ECMA.Database.dll'
              workingDirectory: '$(System.ArtifactsDirectory)/DbUpExtract'
